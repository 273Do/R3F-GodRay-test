/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useRef } from "react";
import * as THREE from "three";
import { Outlines, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export const Model = ({ position }: { position: [number, number, number] }) => {
  const group = useRef<THREE.Group>(null);

  useFrame(() => {
    group.current!.rotation.y += 0.01;
  });

  const { nodes } = useGLTF("/model/logoU2.glb");
  const ref = useRef(null);

  console.log(nodes);
  return (
    <group ref={group} dispose={null} position={position}>
      {/* そもそも一つにまとめるべき */}
      {Object.entries(nodes)
        .filter(([_, obj]) => obj.type === "Mesh")
        .map(([key, mesh]) => (
          <mesh
            key={key}
            geometry={(mesh as THREE.Mesh).geometry}
            scale={0.015}
            castShadow
            receiveShadow
            position={[0, 0, 0]}
            rotation={[Math.PI / 2, 0, 0]}
            ref={ref}
          >
            <Outlines thickness={0.4} color="white" />
            <meshStandardMaterial
              // ref={set}
              // envMap={envMap}
              // bumpMap={bumpMap}
              color={"#ffaa00"}
              roughness={0.2}
              metalness={10}
              bumpScale={0.005}
              // clearcoat={1}
              // clearcoatRoughness={1}
              // radius={1}
              // distort={0.4}
            />
          </mesh>
        ))}
      {/* <mesh geometry={nodes.mesh.geometry} scale={0.8}>
        <meshStandardMaterial
          color={"#ffaa00"}
          roughness={0}
          metalness={10}
          bumpScale={0.005}
          clearcoat={1}
          clearcoatRoughness={1}
          radius={1}
          distort={0.4}
        />
      </mesh> */}
    </group>
  );
};
